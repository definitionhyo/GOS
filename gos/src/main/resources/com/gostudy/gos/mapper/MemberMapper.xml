<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.gostudy.gos.mapper.MemberMapper">
 	<!-- MemberMapper 참조해서 생성 -->
 	<!-- 1. 회원등록 -->
	<insert id="insertMember" 
			parameterType="com.gostudy.gos.vo.MemberVO">
		INSERT INTO 
			member 
					(
					<!-- memberId, CreatedAt은 자동 생성 -->
					membername, password, role
					)
			VALUES 
					(
						#{membername}
						, #{password}
						, #{role}
					)
	</insert>
 	
 	<!-- 2. 회원 조회 (ID 기준) -->
 	<select id="selectMemberById" 
 			parameterType="int" 
 			resultType="com.gostudy.gos.vo.MemberVO"> <!-- ID기준이므로 파라미터 타입 명시 -->
 		SELECT 
 			member_id AS memberId <!-- DB의 테이블에서는 member_id 자바에서는 memberID이므로 AS 사용해줌 -->
 			, membername
 			, password
 			, role
 			, created_at AS createdAt <!-- member_id와 같이 AS -->
 		FROM 
 			member
 		WHERE 
 			member_id = #{memberId}
 	</select>
 	
 	<!-- 3. 전체 회원 조회 -->
 	<select id="selectAllMembers"
 			resultType="com.gostudy.gos.vo.MemberVO">
 		SELECT
 			member_id AS memberId <!-- DB의 테이블에서는 member_id 자바에서는 memberID이므로 AS 사용해줌 -->
 			, membername
 			, password
 			, role
 			, created_at AS createdAt <!-- member_id와 같이 AS -->
 		FROM
 			member
	</select>
 	
 	<!-- 4. 회원 정보 수정 -->
 	<update id="updateMember"
 			parameterType="com.gostudy.gos.vo.MemberVO">
 		UPDATE
 			member
 		SET
 			membername = #{membername}
 			, password = #{password}
 			, role = #{role}		
 		WHERE
 			member_id = #{memberId}
 	</update>
 	
 	<!-- 5. 회원 삭제 -->
 	<delete id="deleteMember" 
 			parameterType="int">
 		DELETE FROM
 			member
 		WHERE 
 			member_id = #{memberId}
	</delete>
 </mapper>
 